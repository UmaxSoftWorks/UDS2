//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Umax.Plugins.Tasks.Stuff {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Umax.Plugins.Tasks.Stuff.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///&lt;head&gt;
        ///&lt;title&gt;#TITLE#&lt;/title&gt;
        ///&lt;/head&gt;
        ///&lt;body&gt;
        ///&lt;ul&gt;
        ///[MAPBLOCK]&lt;li&gt;&lt;a href=&quot;[MAPLINK]&quot;&gt;[MAPBKEYWORD]&lt;/a&gt;&lt;/li&gt;[/MAPBLOCK]
        ///&lt;/ul&gt;
        ///&lt;/body&gt;
        ///&lt;/html&gt;.
        /// </summary>
        internal static string AutoHTMLMap {
            get {
                return ResourceManager.GetString("AutoHTMLMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?php
        ///
        ///$key = &quot;&quot;;
        ///
        ///if(!isset($_GET[&apos;page&apos;]) &amp;&amp; !isset($_GET[&apos;category&apos;]) &amp;&amp; !isset($_GET[&apos;spage&apos;]) &amp;&amp; !isset($_GET[&apos;index&apos;]) &amp;&amp; !isset($_GET[&apos;category&apos;]) &amp;&amp; !isset($_GET[&apos;sitemap&apos;]) &amp;&amp; !isset($_GET[&apos;custom&apos;]))
        ///{
        ///	$key = &quot;index&quot;;
        ///}
        ///else
        ///{
        ///	if(isset($_GET[&apos;page&apos;]))
        ///	{
        ///		$number = $_GET[&apos;page&apos;];
        ///		$key = &quot;page-&quot;.$number;
        ///	}
        ///	else if(isset($_GET[&apos;category&apos;]))
        ///	{
        ///		$number = $_GET[&apos;category&apos;];
        ///		$key = &quot;category-&quot;.$number;
        ///	}
        ///	else if(isset($_GET[&apos;spage&apos;]))
        ///	{
        ///		$number = $_GET[&apos;spage&apos;];
        ///	 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PHPSQLiteStatic {
            get {
                return ResourceManager.GetString("PHPSQLiteStatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?php
        ///
        ///if(!isset($_GET[&apos;[PAGE]&apos;]) &amp;&amp; !isset($_GET[&apos;[CATEGORY]&apos;]) &amp;&amp; !isset($_GET[&apos;[STATICPAGE]&apos;]) &amp;&amp; !isset($_GET[&apos;[INDECXONTINUE]&apos;]) &amp;&amp; !isset($_GET[&apos;[CATEGORYCONTINUE1]&apos;]) &amp;&amp; !isset($_GET[&apos;sitemap&apos;]) &amp;&amp; !isset($_GET[&apos;custom&apos;]))
        ///{
        ///	include(&quot;index.txt&quot;);
        ///}
        ///else
        ///{
        ///	if(isset($_GET[&apos;[PAGE]&apos;]))
        ///	{
        ///		$number = $_GET[&apos;[PAGE]&apos;];
        ///		include(&quot;[PAGE]-&quot;.$number.&quot;.txt&quot;);
        ///	}
        ///	else if(isset($_GET[&apos;[CATEGORY]&apos;]))
        ///	{
        ///		$number = $_GET[&apos;[CATEGORY]&apos;];
        ///		include(&quot;[CATEGORY]-&quot;.$number.&quot;.txt&quot;);
        ///	}
        ///	else if(isse [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PHPTextStatic {
            get {
                return ResourceManager.GetString("PHPTextStatic", resourceCulture);
            }
        }
    }
}
